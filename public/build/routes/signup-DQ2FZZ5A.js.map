{
  "version": 3,
  "sources": ["../../../app/routes/signup.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\signup.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\signup.tsx\");\n  import.meta.hot.lastModified = \"1722912213000\";\n}\n// REMIX HMR END\n\nimport { json } from \"@remix-run/node\";\nimport { Form, useActionData, Link } from \"@remix-run/react\";\nimport { register, createUserSession } from \"~/utils/session.server\";\nexport const action = async ({\n  request\n}) => {\n  const formData = await request.formData();\n  const username = formData.get(\"username\");\n  const password = formData.get(\"password\");\n  if (typeof username !== \"string\" || typeof password !== \"string\") {\n    return json({\n      error: \"invalid form data\"\n    }, {\n      status: 400\n    });\n  }\n  const existingUser = await register({\n    username,\n    password\n  });\n  if (!existingUser) {\n    return json({\n      error: \"user already exists\"\n    }, {\n      status: 400\n    });\n  }\n  return createUserSession(existingUser.id, \"/dashboard\");\n};\nexport default function Signup() {\n  _s();\n  const actionData = useActionData();\n  return <div className=\"container mx-auto p-4 max-w-md\">\n      <h1 className=\"text-3xl font-bold text-center mb-8\">sign up</h1>\n      <Form method=\"post\" className=\"space-y-4\">\n        <div>\n          <label htmlFor=\"username\" className=\"block text-sm font-medium text-gray-700\">\n            username\n          </label>\n          <input type=\"text\" name=\"username\" id=\"username\" required className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\" />\n        </div>\n        <div>\n          <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700\">\n            password\n          </label>\n          <input type=\"password\" name=\"password\" id=\"password\" required className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\" />\n        </div>\n        <button type=\"submit\" className=\"w-full py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\">\n          sign up\n        </button>\n      </Form>\n      {actionData?.error && <p className=\"text-red-500 mt-2\">{actionData.error}</p>}\n      <p className=\"mt-4 text-center\">\n        already have an account?{\" \"}\n        <Link to=\"/login\" className=\"text-indigo-600 hover:text-indigo-500\">\n          log in\n        </Link>\n      </p>\n    </div>;\n}\n_s(Signup, \"fHVw5pq0Zwd2gXh2gyrnVdHnLCc=\", false, function () {\n  return [useActionData];\n});\n_c = Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;AAqBA,kBAAqB;AAErB,qBAA4C;AA+BtC;AArDN,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,kCAAoC,EAAE;AAAA,EAC/E;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAyB;AACzB,cAAY,IAAI,eAAe;AACjC;AAgCe,SAAR,SAA0B;AAC/B,KAAG;AACH,QAAM,aAAa,cAAc;AACjC,SAAO,mDAAC,SAAI,WAAU,kCAClB;AAAA,uDAAC,QAAG,WAAU,uCAAsC,uBAApD;AAAA;AAAA;AAAA;AAAA,WAA2D;AAAA,IAC3D,mDAAC,QAAK,QAAO,QAAO,WAAU,aAC5B;AAAA,yDAAC,SACC;AAAA,2DAAC,WAAM,SAAQ,YAAW,WAAU,2CAA0C,wBAA9E;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,QACA,mDAAC,WAAM,MAAK,QAAO,MAAK,YAAW,IAAG,YAAW,UAAQ,MAAC,WAAU,2IAApE;AAAA;AAAA;AAAA;AAAA,eAA4M;AAAA,WAJ9M;AAAA;AAAA;AAAA;AAAA,aAKA;AAAA,MACA,mDAAC,SACC;AAAA,2DAAC,WAAM,SAAQ,YAAW,WAAU,2CAA0C,wBAA9E;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,QACA,mDAAC,WAAM,MAAK,YAAW,MAAK,YAAW,IAAG,YAAW,UAAQ,MAAC,WAAU,2IAAxE;AAAA;AAAA;AAAA;AAAA,eAAgN;AAAA,WAJlN;AAAA;AAAA;AAAA;AAAA,aAKA;AAAA,MACA,mDAAC,YAAO,MAAK,UAAS,WAAU,8MAA6M,uBAA7O;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,SAfF;AAAA;AAAA;AAAA;AAAA,WAgBA;AAAA,IACC,YAAY,SAAS,mDAAC,OAAE,WAAU,qBAAqB,qBAAW,SAA7C;AAAA;AAAA;AAAA;AAAA,WAAmD;AAAA,IACzE,mDAAC,OAAE,WAAU,oBAAmB;AAAA;AAAA,MACL;AAAA,MACzB,mDAAC,QAAK,IAAG,UAAS,WAAU,yCAAwC,sBAApE;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,SAJF;AAAA;AAAA;AAAA;AAAA,WAKA;AAAA,OAzBG;AAAA;AAAA;AAAA;AAAA,SA0BL;AACJ;AACA,GAAG,QAAQ,gCAAgC,OAAO,WAAY;AAC5D,SAAO,CAAC,aAAa;AACvB,CAAC;AACD,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,QAAQ;AAEzB,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
