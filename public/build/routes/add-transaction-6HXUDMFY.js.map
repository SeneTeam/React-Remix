{
  "version": 3,
  "sources": ["../../../app/routes/add-transaction.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\add-transaction.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\add-transaction.tsx\");\n  import.meta.hot.lastModified = \"1722912213000\";\n}\n// REMIX HMR END\n\nimport { json, redirect } from \"@remix-run/node\";\nimport { Form, useActionData, useNavigate } from \"@remix-run/react\";\nimport { db } from \"~/utils/db.server\";\nimport { motion } from \"framer-motion\";\nexport const action = async ({\n  request\n}) => {\n  const formData = await request.formData();\n  const amount = formData.get(\"amount\");\n  const description = formData.get(\"description\");\n  const category = formData.get(\"category\");\n  const date = formData.get(\"date\");\n  if (typeof amount !== \"string\" || typeof description !== \"string\" || typeof category !== \"string\" || typeof date !== \"string\") {\n    return json({\n      error: \"invalid form data\"\n    }, {\n      status: 400\n    });\n  }\n  try {\n    await db.transaction.create({\n      data: {\n        amount: parseFloat(amount),\n        description,\n        category,\n        date: new Date(date)\n      }\n    });\n    return redirect(\"/\");\n  } catch (error) {\n    return json({\n      error: \"Failed to create transaction\"\n    }, {\n      status: 500\n    });\n  }\n};\nexport default function AddTransaction() {\n  _s();\n  const actionData = useActionData();\n  const navigate = useNavigate();\n  return <div className=\"container mx-auto p-4\">\n      <h1 className=\"text-3xl font-bold text-center mb-8\">add new transaction</h1>\n      <motion.div initial={{\n      opacity: 0,\n      y: 20\n    }} animate={{\n      opacity: 1,\n      y: 0\n    }} transition={{\n      duration: 0.5\n    }} className=\"max-w-md mx-auto\">\n        <Form method=\"post\" className=\"space-y-4\">\n          <div>\n            <label htmlFor=\"amount\" className=\"block text-sm font-medium text-gray-700\">\n              amount\n            </label>\n            <input type=\"number\" step=\"0.01\" name=\"amount\" id=\"amount\" required className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\" />\n          </div>\n          <div>\n            <label htmlFor=\"description\" className=\"block text-sm font-medium text-gray-700\">\n              description\n            </label>\n            <input type=\"text\" name=\"description\" id=\"description\" required className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\" />\n          </div>\n          <div>\n            <label htmlFor=\"category\" className=\"block text-sm font-medium text-gray-700\">\n              category\n            </label>\n            <input type=\"text\" name=\"category\" id=\"category\" required className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\" />\n          </div>\n          <div>\n            <label htmlFor=\"date\" className=\"block text-sm font-medium text-gray-700\">\n              date\n            </label>\n            <input type=\"date\" name=\"date\" id=\"date\" required className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\" />\n          </div>\n          <div className=\"flex justify-between\">\n            <motion.button type=\"submit\" className=\"py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\" whileHover={{\n            scale: 1.05\n          }} whileTap={{\n            scale: 0.95\n          }}>\n              add transaction\n            </motion.button>\n            <motion.button type=\"button\" onClick={() => navigate(\"/\")} className=\"py-2 px-4 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\" whileHover={{\n            scale: 1.05\n          }} whileTap={{\n            scale: 0.95\n          }}>\n              cancel\n            </motion.button>\n          </div>\n        </Form>\n        {actionData?.error && <p className=\"text-red-500 mt-2\">{actionData.error}</p>}\n      </motion.div>\n    </div>;\n}\n_s(AddTransaction, \"YNDRs+jqEyo50IzazjHr5ocC9v8=\", false, function () {\n  return [useActionData, useNavigate];\n});\n_c = AddTransaction;\nvar _c;\n$RefreshReg$(_c, \"AddTransaction\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": []
}
